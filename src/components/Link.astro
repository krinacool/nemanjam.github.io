---
import { cva } from 'class-variance-authority';

import type { HTMLAttributes } from 'astro/types';
import type { VariantProps } from 'class-variance-authority';

const linkVariants = cva('link-default truncate', {
  variants: {
    variant: {
      link: 'link',
      'no-underline': 'link-no-underline',
      heading: 'link-heading',
      nav: 'link-nav',
      markdown: 'link link-markdown',
    },
    disabled: { true: 'link-disabled' },
  },
  // compoundVariants: [],
});

export interface Props extends HTMLAttributes<'a'>, VariantProps<typeof linkVariants> {}

const { class: className, variant = 'link', disabled, ...props } = Astro.props;

const Element = disabled ? 'span' : 'a';

// props target="_blank" etc
---

<Element class={linkVariants({ variant, disabled, className })} {...props}>
  <slot>
    {props.href}
  </slot>
</Element>
